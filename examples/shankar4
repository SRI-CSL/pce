sort Person;
const D, J: Person;
predicate unhurt(Person) indirect;
predicate concussion(Person) indirect;
predicate collision(Person,Person) indirect;
predicate ref(Person) indirect;
add ref(J) or ref(D);
add ~ref(J) or ~ref(D);
add [x] ~ref(x) or unhurt(x) 10.0;
add [x] ~concussion(x) or ~unhurt(x) 1.0 ;
add collision(x,y) => collision(y,x) 1.0 ;
add  ~collision(x,y) or ~unhurt(y) 0.5;
add ~collision(x,y) or concussion(x) 0.4 ;
add collision(D,J);
add concussion(J);
mcsat_params 20000, 0.01, 20.0, 0.01, 30;
mcsat; dumptables all;
